# Github action to Build cda service artifact, add/promote semantic tagging

name: Tag, Build, and Push Image

on:
  push:
    branches:
      - main
      - develop
      - test
    paths-ignore: ['**.md']
  pull_request:
    paths-ignore: ['**.md']

env:
  SERVICE_NAME: cancerdata
  GOOGLE_PROJECT: broad-dsp-gcr-public

jobs:
  tag-build-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - uses: 'actions/checkout@v3'

      - name: Bump the tag to a new version
        uses: databiosphere/github-actions/actions/bumper@bumper-0.0.6
        id: tag
        env:
          DEFAULT_BUMP: patch
          GITHUB_TOKEN: ${{ secrets.BROADBOT_TOKEN }}
          RELEASE_BRANCHES: master
          WITH_V: true

      - name: debug outputs
        run: |-
          echo "github.ref ${{ github.ref }}"
          echo "github.ref_name ${{ github.ref_name }}"
          echo "GITHUB_REF_NAME ${GITHUB_REF_NAME}"
          echo "github.ref_type ${{ github.ref_type }}"
          echo "github.head_ref ${{ github.head_ref }}"
          echo "github ${{ github }}"

      # we need this because github can't actually provide the branch name reliably
      # https://github.com/orgs/community/discussions/5251
      - name: Extract branch
        id: extract-branch
        run: |
          if [[ '${{ github.event_name }}' == 'push' ]]; then
            BRANCH_NAME=${{ github.ref_name }}
          elif [[ '${{ github.event_name }}' == 'pull_request' ]]; then
            BRANCH_NAME=${{ github.head_ref }}
          else
            echo "Failed to extract branch information"
            exit 1
          fi

          echo "name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          service_account_key: ${{ secrets.GCR_PUBLISH_KEY_B64 }}

      - name: Explicitly auth Docker for GCR
        run: gcloud auth configure-docker --quiet

      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build and push GCR image using Jib
        run: "./gradlew jib --image=gcr.io/${GOOGLE_PROJECT}/${SERVICE_NAME}:${{ steps.tag.outputs.tag }}"
        env:
          SERVICE_VERSION: ${{ steps.tag.outputs.tag }}

  report-to-sherlock:
    # Report new cancerdata version to Broad DevOps
    uses: broadinstitute/sherlock/.github/workflows/client-report-app-version.yaml@main
    needs: [ tag-build-publish ]
    with:
      new-version: ${{ needs.tag-build-publish.outputs.tag }}
      chart-name: 'cancerdata'
    permissions:
      contents: 'read'
      id-token: 'write'

  set-version-in-dev:
    if: ${{ github.event_name != 'pull_request' }}
    # Put new cda version in Broad dev environment
    uses: broadinstitute/sherlock/.github/workflows/client-set-environment-app-version.yaml@main
    needs: [tag-build-publish, report-to-sherlock]
    with:
      new-version: ${{ needs.tag-build-publish.outputs.tag }}
      chart-name: 'cancerdata'
      environment-name: 'dev'
    secrets:
      sync-git-token: ${{ secrets.BROADBOT_TOKEN }}
    permissions:
      id-token: 'write'
